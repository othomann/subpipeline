apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-task
  annotations:
    io.kubernetes.cri.untrusted-workload: "false"
spec:
  params:
    - name: repository
      description: the git repo
    - name: revision
      description: the revision
      default: master
  workspaces:
  - name: task-pvc
    mountPath: /artifacts
  steps:
    - name: clone-repo
      image: alpine/git
      env:
        - name: REPOSITORY
          value: $(params.repository)
        - name: REVISION
          value: $(params.revision)
      command: ["/bin/sh", "-c"]
      args:
        - set -e -o pipefail;
          echo "Cloning $REPOSITORY";
          cd /workspace && git clone -q -b $REVISION $REPOSITORY .;
    - name: pre-build-check
      image: ibmcom/pipeline-base-image
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          echo '::slsa-provenance-statement::{"subject":[{"name": "abc", "digest": {"sha256": "abcd"}}]}'
          echo '::slsa-provenance-statement::{"subject":[{"name": "def", "digest": {"sha256": "abcd"}}],"materials":[{"uri": "xyz", "digest": {"sha256": "abcd"}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz","digest":{"sha512":"PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz","digest":{"sha512":"PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz","digest":{"sha512":"kRGRZw3bLlFISDBgwTSA1TMBFN6J6GWDeubmDE3AF+3+yXL8hTWv8r5rkLbqYXY4RjPk/EzHnClI3zQf1cFmHA=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz","digest":{"sha512":"hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz","digest":{"sha512":"+IJOX0OqlHCszo2mBUq+SrEbCj6w7Kpffqx60zYbPTFaO4+yYgRjHwcZNpWvaTylDHaV7PPmBHzSecZiMhtPgw=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz","digest":{"sha512":"QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/debug/-/debug-2.6.8.tgz","digest":{"sha512":"E22fsyWPt/lr4/UgQLt/pXqerGMDsanhbnmqIS3VAXuDi1v3IpiwXe2oncEIondHSBuPDWRoK/pMjlvi8FuOXQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/depd/-/depd-1.1.2.tgz","digest":{"sha512":"7emPTl6Dpo6JRXOXjLRxck+FlLRX5847cLKEn00PLAgc3g2hTZZgr+e4c2v6QpSmLeFP3n5yUo7ft6avBK/5jQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz","digest":{"sha512":"3NdhDuEXnfun/z7x9GOElY49LoqVHoGScmOKwmxhsS8N5Y+Z8KyPPDnaSzqWgYt/ji4mqwfTS34Htrk0zPIXVg=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz","digest":{"sha512":"WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz","digest":{"sha512":"TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz","digest":{"sha512":"NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz","digest":{"sha512":"aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/express/-/express-4.15.4.tgz","digest":{"sha512":"g48YBFQpZMDOGe/l9rOUinTcSBAtHVH17+0iFp/nwIP9Ik5thohP0feDe4M748aCOrlA7mC99mlUlbpxdZcq9w=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/finalhandler/-/finalhandler-1.0.6.tgz","digest":{"sha512":"immlyyYCPWG2tajlYBhZ6cjLAv1QAclU8tKS0d27ZtPqm/+iddy16GT3xLExg+V4lIETLpPwaYQAlZHNE//dPA=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz","digest":{"sha512":"Ua9xNhH0b8pwE3yRbFfXJvfdWF0UHNCdeyb2sbi9Ul/M+r3PTdrz7Cv4SCfZRMjmzEM9PhraqfZFbGTIg3OMyA=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/fresh/-/fresh-0.5.0.tgz","digest":{"sha512":"FveevZlqNSIBombLEB9L3WyWg74r6d0sk+unzqKmt33b5egY0YXDFWIQ/t2Fzr9mgBLL0BlL0/rdg8Oq1C0SVw=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz","digest":{"sha512":"lks+lVC8dgGyh97jxvxeYTWQFvh4uw4yC12gVl63Cg30sjPX4wuGcdkICVXDAESr6OJGjqGA8Iz5mkeN6zlD7A=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz","digest":{"sha512":"x00IRNXNy63jwGkJmzPigoySHbaqpNuzKbBOmzK+g2OdZpQ9w+sxCN+VSB3ja7IAge2OP2qpfxTjeNcyjmW1uw=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.4.0.tgz","digest":{"sha512":"RbrsPoo4IkisyHhS9VDa3ybxnu0wOo0uTAhaELmwxq244p18X7Dk0fQoJvh/QTkIUO296fbjgvMqK3ry84eVVA=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz","digest":{"sha512":"dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz","digest":{"sha512":"cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz","digest":{"sha512":"iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/mime/-/mime-1.3.4.tgz","digest":{"sha512":"sAaYXszED5ALBt665F0wMQCUXpGuZsGdopoqcHPdL39ZYdi7uHoZlhrfZfhv8WzivhBzr/oXwaj+yiK5wY8MXQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz","digest":{"sha512":"sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz","digest":{"sha512":"ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz","digest":{"sha512":"Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz","digest":{"sha512":"+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz","digest":{"sha512":"ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz","digest":{"sha512":"CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz","digest":{"sha512":"5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/proxy-addr/-/proxy-addr-1.1.5.tgz","digest":{"sha512":"av1MQ5vwTiMICwU75KSf/vJ6a+AXP0MtP+aYBqm2RFlire7BP6sWlfOLc8+6wIQrywycqSpJWm5zNkYFkRARWA=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/qs/-/qs-6.5.0.tgz","digest":{"sha512":"fjVFjW9yhqMhVGwRExCXLhJKrLlkYSaxNWdyc9rmHlrVZbk35YHH312dFd7191uQeXkI3mKLZTIbSvIeFwFemg=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz","digest":{"sha512":"Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/send/-/send-0.15.4.tgz","digest":{"sha512":"EwaLqFmlXRHiqBkYXIuQ8WtslF3EwRslJwhdrhRv4ypTNpR1cGQlHLeH1SqMWwPdqf0CntKCV22+EWpFmW+QcQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/serve-static/-/serve-static-1.12.4.tgz","digest":{"sha512":"S0jS3FQXrBdeOwbysweEhiB5ogGfVZND6H2c2Vh2RbriSPe8Bogtbb4J5ZUeViXS0v0YZYe7llGYrEXjK8fnqw=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.0.3.tgz","digest":{"sha512":"9jphSf3UbIgpOX/RKvX02iw/rN2TKdusnsPpGfO/rkcsrd+IRqgHZb4VGnmL0Cynps8Nj2hN45wsi30BzrHDIw=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/statuses/-/statuses-1.3.1.tgz","digest":{"sha512":"wuTCPGlJONk/a1kqZ4fQM2+908lC7fa7nPYpTC1EhnvqLX/IICbeP1OZGDtA374trpSq68YubKUMo8oRhN46yg=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz","digest":{"sha512":"TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz","digest":{"sha512":"pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.0.tgz","digest":{"sha512":"HwU9SLQEtyo+0uoKXd1nkLqigUWLB+QuNQR4OcmB73eWqksM5ovuqcycks2x043W8XVb75rG1HQ0h93TMXkzQQ=="}}]}'
          echo '::slsa-provenance-statement::"{"materials":[{"uri":"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz","digest":{"sha512":"BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg=="}}]}'
          echo
          echo "hi"
          env
    - name: launch-test-suite
      image: ibmcom/pipeline-base-image
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          echo "Launching test pipeline"
          echo '::slsa-provenance-statement::{"subject":[{"name": "gef", "digest": {"sha256": "abcd"}}],"materials":[{"uri": "https://test", "digest": {"sha256": "abcd"}}]}'
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: wait-for-tests
spec:
  workspaces:
  - name: task-pvc
    mountPath: /artifacts 
  steps:
    - name: wait-until-done
      image: ibmcom/pipeline-base-image:2.7
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e
          if [[ -z "${BREAK_GLASS}" ]]; then
            echo "Running in reguar mode, will curl for pipeline to finish"
          else
            echo "Break glass mode detected"
            while [ "$(kubectl get pipelinerun --selector tekton.dev/pipeline=e2e-tests,localsubpipelineid=$PIPELINE_SUB_ID --all-namespaces -o=custom-columns=NAME:.status.completionTime --no-headers)" == "<none>" ]; do
              echo "Waiting for pipleinerun in $latestns to finish"
              sleep 5
            done
            echo "Done!"
          fi
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy
spec: 
  workspaces:
  - name: task-pvc
    mountPath: /artifacts
  steps:
    - name: deploy-with-kubectl
      image: ibmcom/pipeline-base-image
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e -o pipefail
          echo "Launching deploy pipeline"
          echo '::slsa-provenance-statement::{"subject":[{"name": "xyz", "digest": {"sha256": "abcd"}}]}'
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: wait-for-deploy
spec: 
  workspaces:
  - name: task-pvc
    mountPath: /artifacts         
  steps:
    - name: wait-until-deploy-done
      image: ibmcom/pipeline-base-image
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -e
          if [[ -z "${BREAK_GLASS}" ]]; then
            echo "Running in reguar mode, will curl for pipeline to finish"
          else
            echo "Break glass mode detected"
            while [ "$(kubectl get pipelinerun  --selector tekton.dev/pipeline=deploy-pipeline,localsubpipelineid=$PIPELINE_SUB_ID --all-namespaces -o=custom-columns=NAME:.status.completionTime --no-headers)" == "<none>" ]; do
              echo "Waiting for pipleinerun in $latestns to finish"
              sleep 5
            done
            echo "Done!"
          fi
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: cleanup
spec: 
  workspaces:
  - name: task-pvc
    mountPath: /artifacts         
  steps:
    - name: cleanup
      image: ibmcom/pipeline-base-image
      command: ["/bin/bash", "-c"]
      args:
        - set -e -o pipefail;
          echo "cleanup"
