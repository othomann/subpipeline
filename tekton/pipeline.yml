apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: code-engine-pipeline
spec:
  params:
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: repository
      description: the git repo containing source code. If empty, the repository url will be found from toolchain
      default: ""
    - name: branch
      description: the branch for the git repo
      default: "master"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""
    - name: fail-on-lint-errors
      description: force failure of task when docker lint errors are found
      default: "true"
    - name: fail-on-scanned-issues
      description: force failure of task when vulnerability advisor scan issues are found
      default: "true"
    - name: fail-on-test-errors
      description: force failure of task when test errors are found
    - name: path-to-context
      default: "."
    - name: path-to-dockerfile
      default: "."
    - name: dockerfile
      default: "Dockerfile"
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: registry-namespace
      description: container registry namespace
      default: "true"
    - name: registry-secret-name
      description: registry secret name
    - name: app-name
      description: application name
    - name: image-name
      description: image name
    - name: region
      description: region of application deployment
    - name: resource-group
      description: resource group for the application deployment
    - name: code-engine-project
      description: Code Engine project for the application deployment
    - name: pipeline-debug
      description: Pipeline debug mode. Value can be 0 or 1. Default to 0
      default: "0"
    - name: custom-script
      description: The command(s) to run the build in run-build step. It will override the default commands

    - name: cpu
      description: number of vCPU of the Code Engine application
      default: "0.25"
    - name: max-scale
      description: maximum scale of the Code Engine application
      default: "1"
    - name: memory
      description: total memory of the Code Engine application
      default: "0.5G"
    - name: min-scale
      description: minimum scale of the Code Engine application
      default: "0"
    - name: port
      description: port where the application is listening
      default: "http1:8080"
    - name: request-timeout
      description: number of vCPU of the Code Engine application
      default: "300"

      # For health task
    - name: health-endpoint
      description: application health endpoint, e.g. /health
      default: ""

      #Cra specific params
    - name: ibmcloud-region
      description: (Optional) ibmcloud region to use
      default: ""

    # Common command related params
    - name: env-props
      description: (Optional) A custom configuration of environment properties to source before execution, ex. 'export ABC=123 export DEF=456'
      default: ""
    - name: fileignore
      description: (Optional) Filepath to .fileignore
      default: ""
    - name: ibmcloud-trace
      description: (Optional) Enables IBMCLOUD_TRACE for ibmcloud cli logging
      default: "false"
    - name: output
      description: (Optional) Prints command result to console
      default: "false"
    - name: path
      description: Repository path to scan
      default: "/artifacts"
    - name: strict
      description: (Optional) Enables strict mode for scanning
      default: "false"
    - name: toolchainid
      description: (Optional) The target toolchain id to be used. Defaults to the current toolchain id
      default: ""
    - name: verbose
      description: (Optional) Enable verbose log messages
      default: "false"

    # BOM related params
    - name: asset-type
      description: Security checks to run (apps, image, os, all)
      default: "all"
    - name: bom-report
      description: Filepath to store generated Bill of Materials
      default: "bom.json"
    - name: docker-build-flags
      description: (Optional) Customize docker build command for build stage scanning
      default: ""
    - name: docker-build-context
      description: (Optional) If specified, CRA will use the directory in the path parameter as docker build context
    - name: dockerfile-pattern
      description: (Optional) Pattern to identify Dockerfile in the repository
    - name: docker-registry-url
      description: Registry url to use for docker login
      default: ""
    - name: docker-registry-username
      description: Username to authenticate for docker-registry-url
      default: ""
    - name: gradle-exclude-configs
      description: (Optional) Exclude gradle configurations, ex. 'runtimeClasspath,testCompileClasspath'
      default: ""
    - name: maven-exclude-scopes
      description: (Optional) Exclude maven scopes, ex. 'test,compile'
      default: ""
    - name: nodejs-create-package-lock
      description: (Optional) Enable the task to build the package-lock.json for node.js projects
      default: "false"
    - name: prev-report
      description: Filepath to previous BoM report to skip Dockerfile or application manifest scans
      default: ""

    # Deploy Analytic related params
    - name: deploy-report
      description: Filepath to store generated Deploy Analytic report
      default: "deploy.json"

    # Vulnerability related params
    - name: cveignore
      description: (Optional) Filepath to cveignore
      default: ""
    - name: exclude-dev
      description: (Optional) Exclude dev dependencies during vulnerability scan
      default: "false"
    - name: vulnerability-report
      description: Filepath to store Vulnerability report, not stored if empty
      default: "vulnerability.json"

    # User control params
    - name: cra-scan-image
      description: Image to use for `scan` task
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.9"

    # BuildPack related params
    - name: build-strategy
      description: The strategy to use for building the image. Valid values are 'dockerfile' and 'buildpacks'.
      default: "dockerfile"
    - name: deployment-type
      description: Specifies the type of deployment. Valid values are 'application' and 'job'.
      default: "application"

    - name: job-mode
      description: task or daemon
      default: "task"
    - name: job-retrylimit
      description: retry limit
      default: "3"
    - name: job-instances
      description: job instances
      default: "1"
    - name: job-maxexecutiontime
      description: The maximum execution time in seconds for runs of the job.
      default: "7200"

    # App Env
    - name: app-redis-host
      description: redis host
    - name: app-redis-port
      description: redis port
      default: "31196"
    - name: app-redis-db
      description: redis db
    - name: app-node-env
      description: node env
      default: "test"
    - name: app-secret-ref
      description: app secret reference
      default: ""
    - name: app-sms-linkId
      description: app secret reference
      default: "heifer"
    - name: app-sms-senderId
      description: app secret reference
      default: "3067"
    - name: app-topic
      description: topic
    - name: app-sms-endpoint
      description: app secret reference
      default: "https://api.africastalking.com/version1/messaging"

    - name: app-farm-api-base-url
      description: FARM API Base URL
    - name: app-farm-api-field-rec-status
      description: FARM API for updating field recommendation
      
    - name: region-ce
      description: Code Engine Region
      
    - name: visibility
      description: The visibility for the application. Valid values are 'public', 'private' and 'project' 
      default: "public"
    - name: concurrency
      description: The maximum number of requests that can be processed concurrently per instance. 
      default: "100"
    - name: concurrency-target
      description: The threshold of concurrent requests per instance at which one or more additional  instances are created. Use this value to scale up instances based on concurrent number of requests.  
      default: "100"
      
    - name: app-sms-msg-field-rec-success
      description: app-sms-msg-field-rec-success
      default: "Success"
    - name: app-sms-msg-field-rec-invalid
      description: app-sms-msg-field-rec-invalid
      default: "Invalid"
    - name: app-sms-msg-server-err
      description: app-sms-msg-server-err
      default: "Server Error"
    - name: cluster-local
      description: retry limit
      default: "false"
    - name: app-redis-db-token
      description: app-redis-db-token
    - name: app-cache-name
      description: app-cache-name

    - name: app-origin-sms
      description: app-origin-sms
      default: "africastalking.com"
    - name: app-origin-heifer-apps-private
      description: app-origin-heifer-apps-private
    - name: app-origin-heifer-apps-public
      description: app-origin-heifer-apps-public

    - name: app-appid-client-id
      description: app-appid-client-id
    - name: app-appid-tenant-id
      description: app-appid-tenant-id
    - name: app-appid-url
      description: app-appid-url
    - name: app-pubkey-api
      description: app-pubkey-api

    - name: app-redis-db-sms-provider-hooks
      description: app-redis-db-sms-provider-hooks
    - name: app-topic-sms-incoming
      description: app-topic-sms-incoming
    - name: app-topic-sms-delivery-report
      description: app-topic-sms-delivery-report

  workspaces:
    - name: pipeline-ws
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone-repo
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "toolchain-apikey"
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: revision
          value: $(params.revision)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: code-risk-analyzer
      runAfter:
        - git-clone
      taskRef:
        name: cra-v2-cra
      params:
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: ibmcloud-region
          value: $(params.ibmcloud-region)
        - name: registry-region
          value: $(params.registry-region)
        - name: env-props
          value: $(params.env-props)
        - name: fileignore
          value: $(params.fileignore)
        - name: ibmcloud-trace
          value: $(params.ibmcloud-trace)
        - name: output
          value: $(params.output)
        - name: path
          value: $(params.path)
        - name: strict
          value: $(params.strict)
        - name: toolchainid
          value: $(params.toolchainid)
        - name: verbose
          value: $(params.verbose)
        - name: asset-type
          value: $(params.asset-type)
        - name: bom-report
          value: $(params.bom-report)
        - name: docker-build-flags
          value: $(params.docker-build-flags)
        - name: docker-build-context
          value: $(params.docker-build-context)
        - name: dockerfile-pattern
          value: $(params.dockerfile-pattern)
        - name: docker-registry-url
          value: $(params.docker-registry-url)
        - name: docker-registry-username
          value: $(params.docker-registry-username)
        - name: gradle-exclude-configs
          value: $(params.gradle-exclude-configs)
        - name: maven-exclude-scopes
          value: $(params.maven-exclude-scopes)
        - name: nodejs-create-package-lock
          value: $(params.nodejs-create-package-lock)
        - name: prev-report
          value: $(params.prev-report)
        - name: deploy-report
          value: $(params.deploy-report)
        - name: cveignore
          value: $(params.cveignore)
        - name: exclude-dev
          value: $(params.exclude-dev)
        - name: vulnerability-report
          value: $(params.vulnerability-report)
        - name: cra-scan-image
          value: $(params.cra-scan-image)
        - name: custom-script
          value: $(params.custom-script)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: extract-doi-enablement
      taskRef:
        name: toolchain-extract-value
      params:
        # count the number of service in the toolchain that are DevopsInsights
        - name: expression
          value: 'reduce .services[] as $service (0; if $service.service_id=="draservicebroker" then .+1 else . end)'
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: publish-doi-buildrecord
      runAfter: [extract-doi-enablement]
      when:
        - input: $(tasks.extract-doi-enablement.results.extracted-value)
          operator: in
          values: ["1"]
      taskRef:
        name: doi-publish-buildrecord
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: toolchain-apikey-secret-key
          value: "toolchain-apikey"
        - name: app-name
          value: $(params.app-name)
        - name: git-repository
          value: $(tasks.git-clone.results.git-repository)
        - name: git-branch
          value: $(tasks.git-clone.results.git-branch)
        - name: git-commit
          value: $(tasks.git-clone.results.git-commit)
    - name: docker-lint
      when:
        - input: "$(params.build-strategy)"
          operator: in
          values: ["dockerfile"]
      runAfter: [git-clone]
      taskRef:
        name: linter-docker-lint
      params:
        - name: path-to-dockerfile
          value: $(params.path-to-dockerfile)
        - name: dockerfile
          value: $(params.dockerfile)
        - name: fail-on-lint-errors
          value: $(params.fail-on-lint-errors)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: workspace
          workspace: pipeline-ws
    - name: build
      runAfter: [git-clone]
      taskRef:
        name: toolchain-build
      params:
        - name: custom-script
          value: $(params.custom-script)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: unit-tests
      runAfter: [build]
      taskRef:
        name: tester-run-tests
      params:
        - name: fail-on-test-errors
          value: $(params.fail-on-test-errors)
        - name: tests-script
          value: |
            if [ -f ./test/run-tests.sh ]; then
              source ./test/run-tests.sh
              echo -n $FILE_LOCATIONS > $(results.test-result-file-paths.path)
              echo -n $TEST_TYPES > $(results.test-types.path)
            else
              echo "Test runner script not found: ./test/run-tests.sh"
            fi
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: publish-doi-code-tests
      runAfter: [unit-tests]
      when:
        - input: $(tasks.extract-doi-enablement.results.extracted-value)
          operator: in
          values: ["1"]
      taskRef:
        name: doi-publish-testrecord
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: toolchain-apikey-secret-key
          value: "toolchain-apikey"
        - name: build-number
          value: "$(tasks.publish-doi-buildrecord.results.build-number)"
        - name: app-name
          value: $(params.app-name)
        - name: file-locations
          value: "$(tasks.unit-tests.results.test-result-file-paths)"
        - name: test-types
          value: "$(tasks.unit-tests.results.test-types)"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: containerize
      runAfter: [unit-tests]
      taskRef:
        name: task-containerize
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: container-registry-apikey-secret-key
          value: "apikey"
        - name: region
          value: $(params.region)
        - name: registry-region
          value: $(params.registry-region)
        - name: registry-namespace
          value: $(params.registry-namespace)
        - name: resource-group
          value: $(params.resource-group)
        - name: image-name
          value: $(params.image-name)
        - name: path-to-context
          value: $(params.path-to-context)
        - name: path-to-dockerfile
          value: $(params.path-to-dockerfile)
        - name: dockerfile
          value: $(params.dockerfile)
        - name: branch
          value: $(params.branch)
      workspaces:
        - name: source
          workspace: pipeline-ws
    - name: vulnerability-advisor
      runAfter: [containerize]
      taskRef:
        name: icr-check-va-scan
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: container-registry-apikey-secret-key
          value: "apikey"
        - name: scan-report-file
          value: "app-image-va-report.json"
        - name: fail-on-scanned-issues
          value: $(params.fail-on-scanned-issues)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: image-url
          value: $(tasks.containerize.results.image-repository)
        - name: image-digest
          value: $(tasks.containerize.results.image-digest)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: publish-doi-va-scan-record
      runAfter: [vulnerability-advisor]
      when:
        - input: $(tasks.extract-doi-enablement.results.extracted-value)
          operator: in
          values: ["1"]
      taskRef:
        name: doi-publish-testrecord
      params:
        - name: toolchain-apikey-secret-key
          value: "toolchain-apikey"
        - name: build-number
          value: "$(tasks.publish-doi-buildrecord.results.build-number)"
        - name: app-name
          value: $(params.app-name)
        - name: file-locations
          value: $(tasks.vulnerability-advisor.results.scan-report-file)
        - name: test-types
          value: vulnerabilityadvisor
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: deploy-application
      taskRef:
        name: deploy-to-code-engine
      runAfter: [vulnerability-advisor]
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: shuttle-properties-file
          value: "build.properties"
        - name: app-name
          value: $(params.app-name)
        - name: region
          value: $(params.region-ce)
        - name: resource-group
          value: $(params.resource-group)
        - name: code-engine-project
          value: $(params.code-engine-project)
        - name: image-repository
          value: $(tasks.containerize.results.image-repository)
        - name: image-tags
          value: $(tasks.containerize.results.image-tags)
        - name: registry-secret-name
          value: $(params.registry-secret-name)
        - name: cpu
          value: $(params.cpu)
        - name: max-scale
          value: $(params.max-scale)
        - name: memory
          value: $(params.memory)
        - name: min-scale
          value: $(params.min-scale)
        - name: port
          value: $(params.port)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: request-timeout
          value: $(params.request-timeout)
        - name: maxexecutiontime
          value: $(params.job-maxexecutiontime)
        - name: deployment-type
          value: $(params.deployment-type)
        - name: mode
          value: $(params.job-mode)
        - name: retrylimit
          value: $(params.job-retrylimit)
        - name: instances
          value: $(params.job-instances)
        - name: visibility
          value: $(params.visibility)
        - name: concurrency
          value: $(params.concurrency)
        - name: concurrency-target
          value: $(params.concurrency-target)
        - name: cluster-local
          value: $(params.cluster-local)
        - name: app-env
          value: |
            --env NODE_ENV=$(params.app-node-env) \
            --env REDIS_PORT=$(params.app-redis-port) \
            --env REDIS_HOST=$(params.app-redis-host) \
            --env REDIS_DB=$(params.app-redis-db) \
            --env REDIS_DB_TOKEN=$(params.app-redis-db-token) \
            --env CACHE_NAME=$(params.app-cache-name) \
            --env Q_TOPIC=$(params.app-topic) \
            --env FARM_API_BASE_URL=$(params.app-farm-api-base-url) \
            --env FARM_API_FIELD_REC_STATUS=$(params.app-farm-api-field-rec-status) \
            --env SMS_MSG_FIELD_REC_SUCCESS='$(params.app-sms-msg-field-rec-success)' \
            --env SMS_MSG_FIELD_REC_INVALID='$(params.app-sms-msg-field-rec-invalid)' \
            --env SMS_MSG_SERVER_ERR='$(params.app-sms-msg-server-err)' \
            --env ORIGIN_SMS=$(params.app-origin-sms) \
            --env ORIGIN_HEIFER_APPS_PRIVATE=$(params.app-origin-heifer-apps-private) \
            --env ORIGIN_HEIFER_APPS_PUBLIC=$(params.app-origin-heifer-apps-public) \
            --env APP_ID_CLIENT_ID=$(params.app-appid-client-id) \
            --env APP_ID_TENANT_ID=$(params.app-appid-tenant-id) \
            --env APP_ID_URL=$(params.app-appid-url) \
            --env PUBKEY_ENDPOINT=$(params.app-pubkey-api) \
            --env REDIS_DB_SMS_PROVIDER_HOOKS=$(params.app-redis-db-sms-provider-hooks) \
            --env Q_TOPIC_SMS_DELIVERY_REPORT=$(params.app-topic-sms-delivery-report) \
            --env Q_TOPIC_SMS_INCOMING=$(params.app-topic-sms-incoming) \
            --env-from-secret $(params.app-secret-ref)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: check-application-health
      taskRef:
        name: check-health
      runAfter: [deploy-application]
      params:
        - name: app-hostname
          value: $(tasks.deploy-application.results.app-url)
        - name: health-endpoint
          value: $(params.health-endpoint)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
